"""
Custom scalar for dates

Escalar personalizado para fechas
"""
scalar Date

"""
Query operations for Allotr API

Operaciones de consulta de la API Allotr 
"""
type Query {
  """
  Returns the current logged in user
  
  Devuelve el usuario de la sesión actual
  """
  currentUser: User
  """
  Searches for users given a username, name or surname
  
  Busca usuarios dado un username, nombre o apellido
  """
  searchUsers(
    """
    Text used for querying // Texto con el que buscar
    """
    query: String
    ): [PublicUser!]!
}

"""
Mutation operations for Allotr API

Operaciones de mutación de la API Allotr 
"""
type Mutation {
  """
  Deletes an user
  
  Borra un usuario
  """
  deleteUser(
    """
    ID of the user to be deleted // ID del usuario a borrar
    """
    userId: String!,
    """
    Flag for deleting all user resources instead of only removing those without secondary administrator // Flag para borrar todos los recursos del usuario en vez de sólo borrar los que no tienen administrador secundario
    """
    deleteAllFlag: Boolean!
  ): UserDeletionResult
}

type UserDeletionResult {
  status: OperationResult!
  errorCode: ErrorCode
  errorMessage: String
}

type PublicUser {
  id: String
  username: String
  name: String
  surname: String
}

"""
MongoDB/GraphQL User model

Modelo de Usuario de MongoDB/GraphQL
"""
type User @entity {
  _id: String @id
  globalRole: GlobalRole @column
  username: String! @column
  name: String @column
  surname: String @column
  creationDate: Date @column
  userPreferences: UserPreferences @embedded
  oauthIds: OauthIds @embedded
  webPushSubscriptions: [WebPushSubscription]! @column
}

"""
WebPush Subscription Model

Modelo de suscripciones WebPush
"""
type WebPushSubscription @entity(embedded: true) {
  _id: String @id
  endpoint: String @column
  keys: WebPushKeys @embedded
}

type WebPushKeys @entity(embedded: true) {
  p256dh: String @column
  auth: String @column
}

type OauthIds @entity(embedded: true) {
  googleId: String @column
}

type UserPreferences @entity(embedded: true) {
  deleteAllPlans: Boolean
}

"""
User global roles enumeration

Enumeración de roles globales del usuario
"""
enum GlobalRole {
  """
  An admin can access the API as an external entity with extra functionality

  Un adminstrador puede acceder a la API como entidad externa con funcionalidad adicional
  """
  ADMIN
  """
  A user can only access the API to act on his own behalf

  Un usuario sólo puede acceder a la API para actuar como él mismo
  """
  USER
}
