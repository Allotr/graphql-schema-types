# This is placeholder code

scalar Date

type Query {
  currentUser: User
  searchUsers(query: String): [PublicUser!]!
}

type Mutation {
  deleteUser(userId: String!, deleteAllFlag: Boolean!): UserDeletionResult
}

type UserDeletionResult {
  status: OperationResult!
  errorCode: ErrorCode
  errorMessage: String
}

type PublicUser {
  id: String
  username: String
  name: String
  surname: String
}

type User @entity {
  _id: String @id
  globalRole: GlobalRole @column
  username: String! @column
  name: String @column
  surname: String @column
  creationDate: Date @column
  userPreferences: UserPreferences @embedded
  oauthIds: OauthIds @embedded
  webPushSubscriptions: [WebPushSubscription]! @column
}

type WebPushSubscription @entity(embedded: true) {
  _id: String @id
  endpoint: String @column
  keys: WebPushKeys @embedded
}

type WebPushKeys @entity(embedded: true) {
  p256dh: String @column
  auth: String @column
}

type OauthIds @entity(embedded: true) {
  googleId: String @column
}

type UserPreferences @entity(embedded: true) {
  deleteAllPlans: Boolean
}

enum GlobalRole {
  ADMIN
  USER
}
