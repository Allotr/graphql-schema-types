"""
Custom scalar for dates

Escalar personalizado para fechas
"""
scalar Date

"""
Error codes enumeration

Enumerador de códigos de error
"""
enum ErrorCode {
  BAD_DATA
  BAD_CONNECTION
  BAD_TRANSACTION
  DATA_CHANGED_REFRESH
}

"""
Operation result enumerator used for all mutations to return the operation outcome

Enumerador de resultados de operación usado con todas las mutaciones para devolver el estado de ésta
"""
enum OperationResult {
  OK
  ERROR
}

"""
Query operations for Allotr API

Operaciones de consulta de la API Allotr
"""
type Query {
  """
  Returns the current logged in user

  Devuelve el usuario de la sesión actual
  """
  currentUser(
    """
    Stringified ObjectId ID of the user // Identificador de tipo ObjectId pasado a string del usuario
    """
    userId: String
  ): User
  """
  Searches for users given a username, name or surname

  Busca usuarios dado un username, nombre o apellido
  """
  searchUsers(
    """
    Text used for querying // Texto con el que buscar
    """
    query: String
    ): [PublicUser!]!

  """
  Returns the schema for GraphQL stitching

  Devuelve el esquema para GraphQL stitching
  """
  _sdlUser: String!
}

"""
Mutation operations for Allotr API

Operaciones de mutación de la API Allotr
"""
type Mutation {
  """
  Deletes an user

  Borra un usuario
  """
  deleteUser(
    """
    Stringified ObjectId ID of the user // Identificador de tipo ObjectId pasado a string del usuario
    """
    userId: String
    """
    Flag for deleting all user resources instead of only removing those without secondary administrator // Flag para borrar todos los recursos del usuario en vez de sólo borrar los que no tienen administrador secundario
    """
    deleteAllFlag: Boolean!
  ): UserDeletionResult
}

type UserDeletionResult {
  status: OperationResult!
  errorCode: ErrorCode
  errorMessage: String
}

type PublicUser {
  id: String!
  username: String
  name: String
  surname: String
}

"""
MongoDB/GraphQL User model

Modelo de Usuario de MongoDB/GraphQL
"""
type User @entity {
  _id: String @id
  globalRole: GlobalRole @column
  username: String! @column
  name: String @column
  surname: String @column
  creationDate: Date @column
  userPreferences: UserPreferences @embedded
  oauthIds: OauthIds @embedded
  webPushSubscriptions: [WebPushSubscription]! @column
}

"""
WebPush Subscription Model

Modelo de suscripciones WebPush
"""
type WebPushSubscription @entity(embedded: true) {
  _id: String @id
  endpoint: String @column
  keys: WebPushKeys @embedded
}

type WebPushKeys @entity(embedded: true) {
  p256dh: String @column
  auth: String @column
}

type OauthIds @entity(embedded: true) {
  googleId: String @column
}

type UserPreferences @entity(embedded: true) {
  deleteAllPlans: Boolean
}

"""
User global roles enumeration

Enumeración de roles globales del usuario
"""
enum GlobalRole {
  """
  An admin can access the API as an external entity with extra functionality

  Un adminstrador puede acceder a la API como entidad externa con funcionalidad adicional
  """
  ADMIN
  """
  A user can only access the API to act on his own behalf

  Un usuario sólo puede acceder a la API para actuar como él mismo
  """
  USER
}
