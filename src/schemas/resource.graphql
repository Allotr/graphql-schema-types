# This is placeholder code
type Subscription {
    newUpdate: Result
}

type Result {
    result: String
}

type AuthenticateResponse {
    token: String!
}
# End of placeholder code

type Query {
    myResources: [ResourceCard!]!
}

type ResourceCard {
    resourceId: String!
    activeUserCount:Int!
    maxActiveTickets: Int!
    creationDate: Date!
    createdBy: BasicUserInfo
    lastModificationDate: Date!
    name: String!
    description: String
    ticketId: String,
    statusCode: TicketStatusCode!
    lastStatusTimestamp: Date!
    role: LocalRole!
}

type Mutation {
    createResource(resource: InputResource!): CreationResult!
}

type CreationResult {
    status: OperationResult!,
    errorCode: ErrorCode
    errorMessage: String
    newObjectId: String
}

enum ErrorCode {
    BAD_DATA,
    BAD_CONNECTION
}

enum OperationResult {
    OK,
    ERROR
}

input InputResource {
    name: String!
    description: String
    maxActiveTickets: Int!
    userList: [ResourceUser!]!
}

input ResourceUser {
    id: String!
    role: LocalRole!
}


type Resource @entity {
    id: String @id
    name: String! @column,
    description: String @column,
    maxActiveTickets: Int! @column,
    creationDate: Date! @column,
    lastModificationDate: Date! @column,
    tickets: [Ticket!]! @embedded
    createdBy: BasicUserInfo @embedded
    activeUserCount: Int! @column
}

type Ticket @entity(embedded: true) {
    ticketId: String @id,
    creationDate: Date! @column,
    user: TicketUserInfo! @embedded
    statuses: [TicketStatus!]! @embedded
}

type TicketStatus @entity(embedded: true){
    timestamp: Date! @column
    statusCode: TicketStatusCode! @column
}

type BasicUserInfo @entity(embedded: true){
    userId: String @id,
    username: String! @column
}

type TicketUserInfo @entity(embedded: true){
    userId: String @id,
    username: String! @column
    role: LocalRole! @column
}

type OauthIds @entity(embedded: true) {
    googleId: String @column
}

type UserPreferences @entity(embedded: true) {
    deleteAllPlans: Boolean
}



enum LocalRole {
    RESOURCE_ADMIN,
    RESOURCE_USER
}

enum TicketStatusCode {
    INITIALIZED,
    REQUESTING,
    QUEUED,
    AWAITING_CONFIRMATION,
    ACTIVE,
    INACTIVE,
    REVOKED
}